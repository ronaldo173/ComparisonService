<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.9" jmeter="3.0 r1743807">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Ranging - Check validation, pass correct data with configuration" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults - for localhost 8080" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">localhost</stringProp>
        <stringProp name="HTTPSampler.port">8080</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Content-type</stringProp>
            <stringProp name="Header.value">application/xml</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1479381150000</longProp>
        <longProp name="ThreadGroup.end_time">1479381150000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get_all_extract_to_var_existing_id" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/configuration</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathExtractor guiclass="XPathExtractorGui" testclass="XPathExtractor" testname="XPath Extractor-get var with existing id(var - existingIdOfConfig)" enabled="true">
            <stringProp name="XPathExtractor.default"></stringProp>
            <stringProp name="XPathExtractor.refname">existingIdOfConfig</stringProp>
            <stringProp name="XPathExtractor.xpathQuery">configurations/configuration[last()-1]/id</stringProp>
            <boolProp name="XPathExtractor.validate">false</boolProp>
            <boolProp name="XPathExtractor.tolerant">false</boolProp>
            <boolProp name="XPathExtractor.namespace">false</boolProp>
          </XPathExtractor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="update config with id by configuration correct for test data" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;configuration&gt;  &#xd;
    &lt;name&gt;configuration_for_test_must_be_unique_name1&lt;/name&gt;&#xd;
    &lt;configContent&gt;&lt;![CDATA[&#xd;
&lt;xs:schema xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot;&gt;&#xd;
    &lt;xs:element name=&quot;monitors&quot; /&gt;&#xd;
    &lt;xs:element name=&quot;monitor&quot;&gt;&#xd;
        &lt;xs:complexType&gt;&#xd;
            &lt;xs:sequence&gt;&#xd;
                &lt;xs:element name=&quot;model&quot; type=&quot;xs:string&quot; /&gt;&#xd;
                &lt;xs:element name=&quot;diagonal&quot; type=&quot;xs:decimal&quot; /&gt;&#xd;
                &lt;xs:element name=&quot;brightness&quot; type=&quot;xs:decimal&quot; /&gt;&#xd;
                &lt;xs:element name=&quot;resolution&quot;&gt;&#xd;
                    &lt;xs:simpleType&gt;&#xd;
                        &lt;xs:restriction base=&quot;xs:string&quot;&gt;&#xd;
                            &lt;xs:enumeration value=&quot;1920x1080&quot; /&gt;&#xd;
                            &lt;xs:enumeration value=&quot;2560x1080&quot; /&gt;&#xd;
                            &lt;xs:enumeration value=&quot;1600x1900&quot; /&gt;&#xd;
                            &lt;xs:enumeration value=&quot;1366x768&quot; /&gt;&#xd;
                            &lt;xs:enumeration value=&quot;1280x1024&quot; /&gt;&#xd;
                        &lt;/xs:restriction&gt;&#xd;
                    &lt;/xs:simpleType&gt;&#xd;
                &lt;/xs:element&gt;&#xd;
                &lt;xs:element name=&quot;price&quot; type=&quot;xs:decimal&quot; /&gt;&#xd;
            &lt;/xs:sequence&gt;&#xd;
        &lt;/xs:complexType&gt;&#xd;
    &lt;/xs:element&gt;&#xd;
&lt;/xs:schema&gt;&#xd;
    ]]&gt;&lt;/configContent&gt;&#xd;
&lt;/configuration&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/configuration/${existingIdOfConfig}</stringProp>
          <stringProp name="HTTPSampler.method">PUT</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient4</stringProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion-response success true" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/response/isSuccess=&apos;true&apos;</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="pass data for validation" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&lt;input&gt;&#xd;
    &lt;dataForSort&gt;&#xd;
    &lt;![CDATA[&#xd;
&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#xd;
&lt;monitors&gt;&#xd;
    &lt;monitor&gt;&#xd;
        &lt;model&gt;BENQ 24k17500&lt;/model&gt;&#xd;
        &lt;diagonal&gt;24&lt;/diagonal&gt;&#xd;
        &lt;brightness&gt;250&lt;/brightness&gt;&#xd;
        &lt;resolution&gt;1920x1080&lt;/resolution&gt;&#xd;
        &lt;price&gt;7500&lt;/price&gt;&#xd;
    &lt;/monitor&gt;&#xd;
    &lt;monitor&gt;&#xd;
        &lt;model&gt;Philips 225v50z&lt;/model&gt;&#xd;
        &lt;diagonal&gt;22&lt;/diagonal&gt;&#xd;
        &lt;brightness&gt;250&lt;/brightness&gt;&#xd;
        &lt;resolution&gt;1920x1080&lt;/resolution&gt;&#xd;
        &lt;price&gt;4000&lt;/price&gt;&#xd;
    &lt;/monitor&gt;&#xd;
    &lt;monitor&gt;&#xd;
        &lt;model&gt;LG 25um58&lt;/model&gt;&#xd;
        &lt;diagonal&gt;25&lt;/diagonal&gt;&#xd;
        &lt;brightness&gt;250&lt;/brightness&gt;&#xd;
        &lt;resolution&gt;2560x1080&lt;/resolution&gt;&#xd;
        &lt;price&gt;4950&lt;/price&gt;&#xd;
    &lt;/monitor&gt;&#xd;
    &lt;monitor&gt;&#xd;
        &lt;model&gt;SAMSUNG ab25d&lt;/model&gt;&#xd;
        &lt;diagonal&gt;22&lt;/diagonal&gt;&#xd;
        &lt;brightness&gt;250&lt;/brightness&gt;&#xd;
        &lt;resolution&gt;2560x1080&lt;/resolution&gt;&#xd;
        &lt;price&gt;4100&lt;/price&gt;&#xd;
    &lt;/monitor&gt;&#xd;
&lt;/monitors&gt;&#xd;
    ]]&gt;&#xd;
    &lt;/dataForSort&gt;&#xd;
    &lt;sortOrder&gt;&#xd;
        &lt;field name=&quot;price&quot; ordering=&quot;asc&quot; /&gt;&#xd;
        &lt;field name=&quot;diagonal&quot; ordering=&quot;desc&quot; /&gt;&#xd;
        &lt;field name=&quot;resolution&quot; /&gt;&#xd;
    &lt;/sortOrder&gt;&#xd;
&lt;/input&gt;</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/sort</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <XPathAssertion guiclass="XPathAssertionGui" testclass="XPathAssertion" testname="XPath Assertion-response success true" enabled="true">
            <boolProp name="XPath.negate">false</boolProp>
            <stringProp name="XPath.xpath">/response/isSuccess=&apos;true&apos;</stringProp>
            <boolProp name="XPath.validate">false</boolProp>
            <boolProp name="XPath.whitespace">false</boolProp>
            <boolProp name="XPath.tolerant">false</boolProp>
            <boolProp name="XPath.namespace">false</boolProp>
          </XPathAssertion>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
